Things to do:
Horstmann, Section 2.9, 2.10, 3.8, How-to 3.2 Programs that draw stuff
Horstmann, Chapter 3, Implementing Classes
Horstmann, Section 4.3.1, Reading input
Horstmann, Chapter 5, Decisions
Control Structures Videos

SpiralViewer. Contains the main method. Prompts for the initial segment length and number of segments, and creates the JFrame containing the SpiralComponent. Besides SpiralComponent, this class does not depend on any of the other classes mentioned here (e.g., if one of those other classes changed, SpiralViewer would not have to change.) The later section on communicating information between objects will be useful when developing this and the next class listed. We recommend you use CarViewer.java as a starting point for the code in your viewer (more about that example in the next section.)
SpiralComponent. Extends JComponent. Constructor initializes any necessary data. Overrides paintComponent to draw the spiral, using a SpiralGenerator object to generate the segments in the spiral to draw. Here also you can also use the component class from the car example as a starting point.
SpiralGenerator. A spiral generator can generate segments in a rectangular spiral, one by one, starting from the center of the spiral and moving outward. It has a constructor that has parameters for the location of the start of the initial segment, and the length of the initial segment, which is also known as the "unit length", because the length of the other segments are all in relation to the length of this segment. It has one other method, nextSegment which returns the next segment in the spiral. This class does no I/O: neither to the console nor to the graphics window.
We are giving you the exact interface to use for this class. By interface, we mean what clients need to know about the class to use it, i.e., the class name, the class comment, the public method headers and associated method comments. Do not change the public interface when you incorporate it into your own program. We have provided skeleton code for SpiralGenerator.java. Please read the class and method comments in that file for its exact specification.

Note: For all work in this class, when we say do not change the interface for a class, we mean no changing the class name or the provided method headers, no adding public methods, no removing public methods. As part of the grading process, we will be using our own test programs with such classes, and if you change the public interface your code might not even compile with our test programs. We will be testing whether your class implementation matches the specification.

SpiralGenerator does not depend on any of the other classes you are creating here. It does depend on the Java library classes Point and Line2D, see the section on lines and points for more about these classes.

SpiralGeneratorTester. A program to test your SpiralGenerator class independently from its use in the SpiralViewer program. It will have its own main method. This class is described in more detail in the section on testing the SpiralGenerator class.

----------------------------------------------